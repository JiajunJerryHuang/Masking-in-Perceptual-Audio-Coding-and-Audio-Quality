addpath('C:\Users\ROG\Desktop\ECE 241\project\PEAQ\PEAQ');
addpath('C:\Users\ROG\Desktop\ECE 241\project\PEAQ\PEAQ/PQevalAudio/Misc');
addpath('C:\Users\ROG\Desktop\ECE 241\project\PEAQ\PEAQ/PQevalAudio/CB');
addpath('C:\Users\ROG\Desktop\ECE 241\project\PEAQ\PEAQ/PQevalAudio/MOV');
addpath('C:\Users\ROG\Desktop\ECE 241\project\PEAQ\PEAQ/PQevalAudio/Patt');
addpath('C:\Users\ROG\Desktop\ECE 241\project\PEAQ\PEAQ/PQevalAudio');


clear; clc;

inputFlac  = '../Sample_BeeMoved_96kHz24bit.flac';
refWav     = 'BeeMoved_Ref_48kHz16bit.wav';
bitRates   = [64, 96, 160, 320];

%% 1. Read the FLAC and downsample/convert to 48kHz 16-bit
[audio, fs] = audioread(inputFlac);  % e.g., 96 kHz, 24-bit
targetFs    = 48000;

if fs ~= targetFs
    % Resample from 96 kHz to 48 kHz
    audio = resample(audio, targetFs, fs);
end

% Convert from floating-point to 16-bit integer range:
audio_16 = int16(audio * 32767);

% Write the reference WAV (48kHz, 16-bit)
audiowrite(refWav, audio_16, targetFs, 'BitsPerSample', 16);

%% 2. Encode to MP3 at multiple bitrates using FFmpeg then decode each MP3 back to 48kHz 16-bit WAV
for br = bitRates
    % Encode
    mp3File = sprintf('BeeMoved_%dkbps.mp3', br);
    cmdEncode = sprintf('ffmpeg -y -i "%s" -b:a %dk "%s"', refWav, br, mp3File);
    system(cmdEncode);
    
    % Decode back to 48kHz 16-bit WAV
    decodedWav = sprintf('BeeMoved_%dkbps_48kHz16bit.wav', br);
    cmdDecode = sprintf('ffmpeg -y -i "%s" -ar 48000 -ac 2 -sample_fmt s16 "%s"', ...
                        mp3File, decodedWav);
    system(cmdDecode);
end

%% 3. Run PEAQ on each decoded file
for br = bitRates
    testWav = sprintf('BeeMoved_%dkbps_48kHz16bit.wav', br);
    
    % Evaluate using PQevalAudio_fn
    [odg, movb] = PQevalAudio_fn(refWav, testWav);
    
    % Display result
    fprintf('Bitrate: %3d kbps | PEAQ ODG = %.2f\n', br, odg);
end

fprintf('\nPEAQ evaluation complete.\n');